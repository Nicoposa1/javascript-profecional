{"id":"ejercicio/this.html","dependencies":[{"name":"/mnt/c/Users/nico/Desktop/platzi/Escuela de JavaScript/javascript_profecional/package.json","includedInParent":true,"mtime":1593089495366}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n  <a href=\"/ejercicio/\">Go Back</a>\r\n  <p><em>Abre la consola</em></p>\r\n  <h1>this se refiere a un objeto. Ese objeto es el que actualmente <br> está ejecutando un pedazo de código</h1>\r\n  <script>// this en el scope global\nconsole.log(`this: ${this}`); // this en el scope de una funcion \n\nfunction whoIsThis() {\n  return this;\n}\n\nconsole.log(`whoIsThis(): ${whoIsThis()} `); // This en scope de una funcion en stric mode\n\nfunction whoIsThisStrict() {\n  \"use strict\";\n\n  return this;\n}\n\nconsole.log(`whoIsThisStrict(): ${whoIsThisStrict()} `); // this en el cantexto de un objeto\n\nconst person = {\n  name: 'Gabi',\n  saludar: function () {\n    console.log(`Hola soy ${this.name}`);\n  }\n};\nperson.saludar(); // this cuando sacamos a una funcion de un objeto \n\nconst accion = person.saludar;\naccion(); // this en el contexto de una \"clase\"\n\nfunction Person(name) {\n  // this = {}\n  this.name = name;\n}\n\nPerson.prototype.saludar = function () {\n  console.log(`Me llamo ${this.name}`);\n};\n\nconst angela = new Person(\"Angela\");\nangela.saludar();</script>\r\n</body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"83342d5a428f09b7d7dc6b91c7e11730","cacheData":{"env":{}}}